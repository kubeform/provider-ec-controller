/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
	"sigs.k8s.io/cli-utils/pkg/kstatus/status"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type Extension struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              ExtensionSpec   `json:"spec,omitempty"`
	Status            ExtensionStatus `json:"status,omitempty"`
}

type ExtensionSpec struct {
	State *ExtensionSpecResource `json:"state,omitempty" tf:"-"`

	Resource ExtensionSpecResource `json:"resource" tf:"resource"`

	UpdatePolicy base.UpdatePolicy `json:"updatePolicy,omitempty" tf:"-"`

	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`
}

type ExtensionSpecResource struct {
	Timeouts *base.ResourceTimeout `json:"timeouts,omitempty" tf:"timeouts"`

	ID string `json:"id,omitempty" tf:"id,omitempty"`

	// Description for extension
	// +optional
	Description *string `json:"description,omitempty" tf:"description"`
	// download url
	// +optional
	DownloadURL *string `json:"downloadURL,omitempty" tf:"download_url"`
	// Extension type. bundle or plugin
	ExtensionType *string `json:"extensionType" tf:"extension_type"`
	// file hash
	// +optional
	FileHash *string `json:"fileHash,omitempty" tf:"file_hash"`
	// file path
	// +optional
	FilePath *string `json:"filePath,omitempty" tf:"file_path"`
	// +optional
	LastModified *string `json:"lastModified,omitempty" tf:"last_modified"`
	// Required name of the ruleset
	Name *string `json:"name" tf:"name"`
	// +optional
	Size *int64 `json:"size,omitempty" tf:"size"`
	// +optional
	Url *string `json:"url,omitempty" tf:"url"`
	// Eleasticsearch version
	Version *string `json:"version" tf:"version"`
}

type ExtensionStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase status.Status `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// ExtensionList is a list of Extensions
type ExtensionList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of Extension CRD objects
	Items []Extension `json:"items,omitempty"`
}
